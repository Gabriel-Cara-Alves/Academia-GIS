#% text_encoding = iso8859_1
##
##  Auto-generated by Dialog Designer v2.7 : 22/08/2024
##
##  System.user_mame = a914245
##
##  SUPPLIMENTARY code for gui class 'projeto_final'
##    - add/redefine code here, it will not be auto-modified.

_package sw
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.custom_build_gui(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 22/08/2024
	#.a_view_electric << gis_program_manager.cached_dataset(:electric)
	#.coll_pole << a.view_electric.collection(:ed_pole)

	  	
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.post_activation(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 22/08/2024


_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.btn_pesquisar(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 06/08/2024
	##
	
	#_global aa
	#  aa << .items
	#  _local ev << gis_program_manager.cached_dataset(:electric)
	#  _local coll_pole << ev.collection(:ed_pole)
	
	#metodo para o botão pesquisar
	_local a_pred

	_if .items[:txt_pesquisar_id].value <> ""
	_then
		a_pred << predicate.eq(:id, .items[:txt_pesquisar_id].value.as_integer())
	_endif

	_if .items[:tc_pesquisar_status].value <> ""
	_then
		_if a_pred _is _unset
		_then
			a_pred << predicate.eq(:status, .items[:tc_pesquisar_status].value)
		_else
			a_pred << a_pred _and predicate.eq(:status, .items[:tc_pesquisar_status].value)
		_endif
	_endif

	_if .items[:tc_pesquisar_usage].value <> ""
	_then
		_if a_pred _is _unset
		_then
			a_pred << predicate.eq(:usage, .items[:tc_pesquisar_usage].value)
		_else
			a_pred << a_pred _and predicate.eq(:usage, .items[:tc_pesquisar_usage].value)
		_endif
	_endif

	_if .items[:txt_pesquisar_number].value <> ""
	_then
		_if a_pred _is _unset
		_then
			a_pred << predicate.eq(:number, .items[:txt_pesquisar_number].value)
		_else
			a_pred << a_pred _and predicate.eq(:number, .items[:txt_pesquisar_number].value)
		_endif
	_endif


_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.tbl_pole_aspect
	##
	##  Auto-generated by Dialog Designer v2.7 : 07/08/2024
	##
	##  SAMPLE tabular list code ...
	
	#metodo para popular a tabular list
	tab_list << rope.new()
	
	_loop
		vals << {}.new(10)
		
		vals[1] << rec.id
		vals[2] << rec.status
		vals[3] << rec.usage
		vals[4] << rec.number
		vals[5] << rec.owner_type
		vals[6] << rec.owner_name
		vals[7] << rec.date_installed
		vals[8] << rec.material
		vals[9] << rec.strength
		vals[10] << rec.treatment
		
		# Set the row of data for the table
		ds << display_tree.new(rec.id,vals)

		# Specify how the data will be displayed
		ds.styled_string << {:value,1,:tab,:value,2,:tab,:value,3,:tab,:value,4,:tab,:value,5,:tab,:value,6,:tab,:value,7,:tab,:value,8,:tab,:value,9,:tab,:value,10}

		# Add the row to the list
		tab_list.add_last(ds)
	_endloop

	>> tab_list
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.tbl_import_aspect
	##
	##  Auto-generated by Dialog Designer v2.7 : 21/08/2024
	##
	##  SAMPLE tabular list code ...

	tab_list << rope.new()
	
	_loop
		
		vals[1] << vals[1].as_integer()
		
		# Set the row of data for the table
		ds << display_tree.new(vals[1],vals)
	
		# Specify how the data will be displayed
		ds.styled_string << {:value,1,:tab,:value,2,:tab,:value,3,:tab,:value,4,:tab,:value,5,:tab,:value,6,:tab,:value,7,:tab,:value,8,:tab,:value,9,:tab,:value,10}

		# Add the row to the list
		tab_list.add_last(ds)
	_endloop

	>> tab_list
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.tbl_pole_double_clicked(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 09/08/2024
	
	_local vals << args[1].value 
	
	##ID
	.items[:txt_editor_id].value << vals[1].write_string
	
	## STATUS
	.items[:tc_editor_status].value << vals[2].default("")
	
	## USAGE
	.items[:tc_editor_usage].value << vals[3].default("")
	
	## NUMBER
	.items[:txt_editor_number].value << vals[4].default("")
	
	## OWNER TYPE
	.items[:tc_editor_owner_type].value << vals[5].default("")
	
	## OWNER NAME
	.items[:tc_editor_owner_name].value << vals[6].default("")
	
	## DATE INSTALLED
	.items[:dt_editor_date_installed_value] << vals[7]
	_self.changed(:dt_editor_date_installed_aspect, :refresh)
	
	## MATERIAL
	.items[:tc_editor_material].value << vals[8].default("")
	
	## STRENGTH
	.items[:tc_editor_strength].value << vals[9].default("")
	
	## TREATMENT
	.items[:tc_editor_treatment].value << vals[10].default("")
	

_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.tbl_pole_selected(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 09/08/2024


_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.dt_editor_date_installed_aspect
	##
	##  Auto-generated by Dialog Designer v2.7 : 14/08/2024
	##
	##  Generate single cell tabular list

	_if .items.includes_key?(:dt_editor_date_installed_value)
        _then
                old_val << .items[:dt_editor_date_installed_value]
        ## _else
                ## old_val << date.now()
        _endif

	_local l_list << rope.new()
	_local l_styled_string << styled_string.new(:value, :when)

	_local l_dp << display_tree.new(1,property_list.new_with(:when,old_val) )
	l_dp.styled_string << l_styled_string
	l_list.add(l_dp)

	>> l_list
_endmethod
$

		