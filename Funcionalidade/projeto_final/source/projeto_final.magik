#% text_encoding = iso8859_1
##
##  Auto-generated by Dialog Designer v2.7
##  on 18/09/2024
##
##  System.user_name = a914245
##

_package sw
$

_pragma(classify_level=advanced, topic={projeto_final})
def_slotted_exemplar(:projeto_final,
	{
		{:items, _unset, :writable}
	},
	:plugin)
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.init_actions()
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024
	##
	##  Initialize actions for SELF.
	##

	#
	# Work Area Actions ...
	#
	_self.add_action( sw_action.new( :btn_pesquisar,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:btn_pesquisar),
		:engine,                 _self,
		:action_message,         :|btn_pesquisar()| ) )

	_self.init_actions_1()
_endmethod
$
_method projeto_final.init_actions_1(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.add_action( sw_action.new( :btn_limpar_editor,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:btn_limpar_editor),
		:engine,                 _self,
		:action_message,         :|button_item_01()| ) )

	_self.add_action( sw_action.new( :btn_inserir,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:btn_inserir),
		:engine,                 _self,
		:action_message,         :|button_item_02()| ) )

	_self.add_action( sw_action.new( :btn_atualizar,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:btn_atualizar),
		:engine,                 _self,
		:action_message,         :|button_item_03()| ) )

	_self.add_action( sw_action.new( :btn_excluir,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:btn_excluir),
		:engine,                 _self,
		:action_message,         :|button_item_04()| ) )

	_self.add_action( sw_action.new( :btn_desfazer,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:btn_desfazer),
		:engine,                 _self,
		:action_message,         :|button_item_01()| ) )

	_self.add_action( sw_action.new( :btn_salvar,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:btn_salvar),
		:engine,                 _self,
		:action_message,         :|button_item_05()| ) )

	_self.add_action( sw_action.new( :btn_exportar_csv,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:btn_exportar_csv),
		:engine,                 _self,
		:action_message,         :|button_item_06()| ) )

	_self.add_action( sw_action.new( :btn_importar_csv,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:btn_importar_csv),
		:engine,                 _self,
		:action_message,         :|button_item_01()| ) )

	_self.add_action( sw_action.new( :btn_sair,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:btn_sair),
		:engine,                 _self,
		:action_message,         :|button_item_07()| ) )

	#
	# Menubar Actions ...
	#
	_self.add_action( sw_action.new( :quit,
		:menubar_control,        :button_item,
		:engine,                 _self,
		:action_message,         :|quit()| ) )

	_self.add_action( sw_action.new( :about,
		:menubar_control,        :button_item,
		:engine,                 _self,
		:action_message,         :|about()| ) )
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.build_gui(a_frame,_optional xml_element)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024
	##
	##  Define the GUI layout.
	##

	.items << property_list.new()

	rowcol_01 << rowcol.new(a_frame,5,1,:pixel,
		:resize?,	_true,
		:tab_label,	"Projeto GIS - 2a Academia",
		:bottom_spacing,	6,
		:col_spacing,	7,
		:default_col_alignment,	:fill,
		:default_row_alignment,	:fill,
		:left_spacing,	6,
		:right_spacing,	6,
		:row_spacing,	6,
		:top_spacing,	6)

	_self.build_group_box_01(rowcol_01)

	gb << group_box.new(rowcol_01,"Resultado Pesquisa",
		:col_alignment,	:fill,
		:row_alignment,	:fill,
		:row,2,:col,1)
	group_box_02 << rowcol.new(gb,1,1,:pixel,
		:resize?,	_true,
		:bottom_spacing,	2,
		:col_spacing,	7,
		:default_col_alignment,	:fill,
		:default_row_alignment,	:fill,
		:left_spacing,	5,
		:right_spacing,	5,
		:row_spacing,	6,
		:top_spacing,	5)

	.items[:tab_list] << tree_item.new(group_box_02,
		:model,	_self,
		:allow_filtering?,	_false,
		:aspect,	:|tabular_list_01_aspect|,
		:col,	1,
		:col_alignment,	:fill,
		:column_alignments,	{:right,:right,:right,:right,:right,:right,:right,:right,:right,:right},
		:column_allow_groupby?,	_false,
		:column_headings,	{"ID","Status","Usage","Number","Owner Type","Owner Name","Date Installed","Material","Strength","Treatment"},
		:column_widths,	{60,60,60,60,80,80,60,60,60,60},
		:double_click_notifier,	:|tabular_list_01_double_clicked()|,
		:grid_lines?,	_false,
		:height,	80,
		:mode,	:one,
		:resize?,	_true,
		:row,	1,
		:row_alignment,	:fill,
		:select_notifier,	:|tabular_list_01_selected()|,
		:width,	160 )

	_self.build_group_box_03(rowcol_01)

	gb << group_box.new(rowcol_01,"",
		:col_alignment,	:fill,
		:row_alignment,	:fill,
		:row,4,:col,1)
	group_box_04 << rowcol.new(gb,1,6,:pixel,
		:resize?,	_true,
		:bottom_spacing,	2,
		:col_spacing,	7,
		:default_col_alignment,	:fill,
		:default_row_alignment,	:fill,
		:left_spacing,	5,
		:right_spacing,	5,
		:row_spacing,	6,
		:top_spacing,	5)

	_self.action(:btn_limpar_editor).place_control_on(group_box_04,:dialog,
		:control_type, { :button_item,
			:col,	1,
			:col_alignment,	:left,
			:enabled?,	_true,
			:label,	"Limpar Editor",
			:min_width,	60,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|button_item_01()| } )
	_self.action(:btn_inserir).place_control_on(group_box_04,:dialog,
		:control_type, { :button_item,
			:col,	2,
			:col_alignment,	:left,
			:enabled?,	_true,
			:label,	"Inserir",
			:min_width,	60,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|button_item_02()| } )
	_self.action(:btn_atualizar).place_control_on(group_box_04,:dialog,
		:control_type, { :button_item,
			:col,	3,
			:col_alignment,	:left,
			:enabled?,	_true,
			:label,	"Atualizar",
			:min_width,	60,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|button_item_03()| } )
	_self.action(:btn_excluir).place_control_on(group_box_04,:dialog,
		:control_type, { :button_item,
			:col,	4,
			:col_alignment,	:left,
			:enabled?,	_true,
			:label,	"Excluir",
			:min_width,	60,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|button_item_04()| } )
	_self.action(:btn_desfazer).place_control_on(group_box_04,:dialog,
		:control_type, { :button_item,
			:col,	5,
			:col_alignment,	:left,
			:enabled?,	_true,
			:label,	"Desfazer",
			:min_width,	60,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|button_item_01()| } )
	_self.action(:btn_salvar).place_control_on(group_box_04,:dialog,
		:control_type, { :button_item,
			:col,	6,
			:col_alignment,	:left,
			:enabled?,	_true,
			:label,	"Salvar",
			:min_width,	60,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|button_item_05()| } )
	gb << group_box.new(rowcol_01,"",
		:col_alignment,	:fill,
		:row_alignment,	:fill,
		:row,5,:col,1)
	group_box_05 << rowcol.new(gb,1,3,:pixel,
		:resize?,	_true,
		:bottom_spacing,	2,
		:col_spacing,	7,
		:default_col_alignment,	:fill,
		:default_row_alignment,	:fill,
		:left_spacing,	5,
		:right_spacing,	5,
		:row_spacing,	6,
		:top_spacing,	5)

	_self.action(:btn_exportar_csv).place_control_on(group_box_05,:dialog,
		:control_type, { :button_item,
			:col,	1,
			:col_alignment,	:left,
			:enabled?,	_true,
			:label,	"Exportar CSV",
			:min_width,	60,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|button_item_06()| } )
	_self.action(:btn_importar_csv).place_control_on(group_box_05,:dialog,
		:control_type, { :button_item,
			:col,	2,
			:col_alignment,	:left,
			:enabled?,	_true,
			:label,	"Importar CSV",
			:min_width,	60,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|button_item_01()| } )
	_self.action(:btn_sair).place_control_on(group_box_05,:dialog,
		:control_type, { :button_item,
			:col,	3,
			:col_alignment,	:left,
			:enabled?,	_true,
			:label,	"Sair",
			:min_width,	60,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|button_item_07()| } )
	_self.custom_build_gui()

	>> rowcol_01
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.build_group_box_01(rowcol_01)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	gb << group_box.new(rowcol_01,"Consulta Poste",
		:col_alignment,	:fill,
		:row_alignment,	:fill,
		:row,1,:col,1)
	group_box_01 << rowcol.new(gb,1,10,:pixel,
		:resize?,	_true,
		:bottom_spacing,	2,
		:col_spacing,	7,
		:default_col_alignment,	:fill,
		:default_row_alignment,	:fill,
		:left_spacing,	5,
		:right_spacing,	5,
		:row_spacing,	6,
		:top_spacing,	5)

	radio_group_01 << rowcol.new(group_box_01,2,1,:pixel,
		:resize?,	_true,
		:tab_label,	"Tab",
		:bottom_spacing,	6,
		:col,	1,
		:col_spacing,	5,
		:default_col_alignment,	:left,
		:default_row_alignment,	:top,
		:left_spacing,	6,
		:right_spacing,	6,
		:row,	1,
		:row_spacing,	5,
		:top_spacing,	6)
	.items[:radio_group_01] << rg << radio_group.new(radio_group_01)
	.items[:radio_item_01] << radio_item.new(radio_group_01,_unset,:model,_self,
			:col,	1,
			:enabled?,	_true,
			:label,	"Por Atributo",
			:row,	1 )
	rg.manage_child(.items[:radio_item_01], :|radio_item_01|)
	.items[:radio_item_02] << radio_item.new(radio_group_01,_unset,:model,_self,
			:col,	1,
			:enabled?,	_true,
			:label,	"Por Trilho",
			:row,	2 )
	rg.manage_child(.items[:radio_item_02], :|radio_item_02|)



	.items[:lbl_pesquisar_id] << label_item.new(group_box_01,"ID",
			:col,	2,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	1,
			:row_alignment,	:top,
			:value,	"ID" )

	.items[:txt_pesquisar_id] << text_item.new(group_box_01,_unset,:model,_self,
			:col,	3,
			:col_alignment,	:fill,
			:display_length,	10,
			:enabled?,	_true,
			:row,	1,
			:row_alignment,	:top )

	.items[:lbl_pesquisar_status] << label_item.new(group_box_01,"Status",
			:col,	4,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	1,
			:row_alignment,	:top,
			:value,	"Status" )

	.items[:tc_pesquisar_status] << text_choice_item.new(group_box_01,"",
			:model,   _self,
			:col,	5,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	1,
			:row_alignment,	:top )

	.items[:lbl_pesquisar_usage] << label_item.new(group_box_01,"Usage",
			:col,	6,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	1,
			:row_alignment,	:top,
			:value,	"Usage" )

	.items[:tc_pesquisar_usage] << text_choice_item.new(group_box_01,"",
			:model,   _self,
			:col,	7,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	1,
			:row_alignment,	:top )

	.items[:lbl_pesquisar_number] << label_item.new(group_box_01,"Number",
			:col,	8,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	1,
			:row_alignment,	:top,
			:value,	"Number" )

	.items[:txt_pesquisar_number] << text_item.new(group_box_01,_unset,:model,_self,
			:col,	9,
			:col_alignment,	:fill,
			:display_length,	10,
			:enabled?,	_true,
			:row,	1,
			:row_alignment,	:top )

	_self.action(:btn_pesquisar).place_control_on(group_box_01,:dialog,
		:control_type, { :button_item,
			:col,	10,
			:col_alignment,	:left,
			:enabled?,	_true,
			:label,	"Pesquisar",
			:min_width,	60,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|btn_pesquisar()| } )_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.build_group_box_03(rowcol_01)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	gb << group_box.new(rowcol_01,"Editor",
		:col_alignment,	:fill,
		:row_alignment,	:fill,
		:row,3,:col,1)
	group_box_03 << rowcol.new(gb,5,4,:pixel,
		:resize?,	_true,
		:bottom_spacing,	2,
		:col_spacing,	7,
		:default_col_alignment,	:fill,
		:default_row_alignment,	:fill,
		:left_spacing,	5,
		:right_spacing,	5,
		:row_spacing,	6,
		:top_spacing,	5)

	.items[:label_item_05] << label_item.new(group_box_03,"Status",
			:col,	1,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	1,
			:row_alignment,	:top,
			:value,	"Status" )

	.items[:tc_editor_status] << text_choice_item.new(group_box_03,"",
			:model,   _self,
			:col,	2,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	1,
			:row_alignment,	:top )

	.items[:label_item_06] << label_item.new(group_box_03,"Date Installed",
			:col,	3,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	1,
			:row_alignment,	:top,
			:value,	"Date Installed" )

	.items[:dt_editor_date_installed_value] << tree_item.new(group_box_03,
		:model,	_self,
		:aspect,	:|date_time_item_01_aspect|,
		:col,	4,
		:col_alignment,	:fill,
		:column_headings,	{},
		:cell_selection?,_true,
		:visible_rows,	1,
		:row,	1,
		:row_alignment,  :top,
		:editors, {{:when, in_place_date_editor}},
		:mode,	:one,
		:min_width,	80,
		:value_changed_notifier, :|date_time_item_01_changed()|)

	.items[:label_item_07] << label_item.new(group_box_03,"Usage",
			:col,	1,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	2,
			:row_alignment,	:top,
			:value,	"Usage" )

	.items[:tc_editor_usage] << text_choice_item.new(group_box_03,"",
			:model,   _self,
			:col,	2,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	2,
			:row_alignment,	:top )

	.items[:label_item_08] << label_item.new(group_box_03,"Material",
			:col,	3,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	2,
			:row_alignment,	:top,
			:value,	"Material" )

	.items[:tc_editor_material] << text_choice_item.new(group_box_03,"",
			:model,   _self,
			:col,	4,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	2,
			:row_alignment,	:top )

	.items[:label_item_09] << label_item.new(group_box_03,"Number",
			:col,	1,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	3,
			:row_alignment,	:top,
			:value,	"Number" )

	.items[:txt_editor_number] << text_item.new(group_box_03,_unset,:model,_self,
			:col,	2,
			:col_alignment,	:fill,
			:display_length,	10,
			:enabled?,	_true,
			:row,	3,
			:row_alignment,	:top )

	_self.build_label_item_10_1(group_box_03)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.build_label_item_10_1(group_box_03)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	.items[:label_item_10] << label_item.new(group_box_03,"Strength",
			:col,	3,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	3,
			:row_alignment,	:top,
			:value,	"Strength" )

	.items[:tc_editor_strength] << text_choice_item.new(group_box_03,"",
			:model,   _self,
			:col,	4,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	3,
			:row_alignment,	:top )

	.items[:label_item_14] << label_item.new(group_box_03,"Owner Type",
			:col,	1,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	4,
			:row_alignment,	:top,
			:value,	"Owner Type" )

	.items[:tc_editor_owner_type] << text_choice_item.new(group_box_03,"",
			:model,   _self,
			:col,	2,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	4,
			:row_alignment,	:top )

	.items[:label_item_13] << label_item.new(group_box_03,"Treatment",
			:col,	3,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	4,
			:row_alignment,	:top,
			:value,	"Treatment" )

	.items[:tc_editor_treatment] << text_choice_item.new(group_box_03,"",
			:model,   _self,
			:col,	4,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	4,
			:row_alignment,	:top )

	.items[:label_item_11] << label_item.new(group_box_03,"Owner Name",
			:col,	1,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	5,
			:row_alignment,	:top,
			:value,	"Owner Name" )

	.items[:tc_editor_owner_name] << text_choice_item.new(group_box_03,"",
			:model,   _self,
			:col,	2,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	5,
			:row_alignment,	:top )

	.items[:label_item_12] << label_item.new(group_box_03,"ID",
			:col,	3,
			:col_alignment,	:fill,
			:enabled?,	_true,
			:row,	5,
			:row_alignment,	:top,
			:value,	"ID" )

	.items[:txt_editor_id] << text_item.new(group_box_03,_unset,:model,_self,
			:col,	4,
			:col_alignment,	:fill,
			:display_length,	10,
			:enabled?,	_true,
			:row,	5,
			:row_alignment,	:top )
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.quit()
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024
	##
	##  Close the dialog.
	##
	.framework.close()
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.btn_pesquisar(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.btn_pesquisar()",_scatter args)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.button_item_01(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.button_item_01()",_scatter args)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.button_item_01(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.button_item_01()",_scatter args)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.button_item_01(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.button_item_01()",_scatter args)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.button_item_02(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.button_item_02()",_scatter args)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.button_item_03(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.button_item_03()",_scatter args)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.button_item_04(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.button_item_04()",_scatter args)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.button_item_05(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.button_item_05()",_scatter args)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.button_item_06(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.button_item_06()",_scatter args)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.button_item_07(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.button_item_07()",_scatter args)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.date_time_item_01_aspect
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024
	##
	##  Generate single cell tabular list

	_if .items.includes_key?(:dt_editor_date_installed_value_value)
        _then
                old_val << .items[:dt_editor_date_installed_value_value]
        _else
                old_val << date.now()
        _endif

	_local l_list << rope.new()
	_local l_styled_string << styled_string.new(:value, :when)

	_local l_dp << display_tree.new(1,property_list.new_with(:when,old_val) )
	l_dp.styled_string << l_styled_string
	l_list.add(l_dp)

	>> l_list
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.dt_editor_date_installed_value_value
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024
	##
	##  Return the date value from the tree_item

	>> .items[:dt_editor_date_installed_value].tree_manager.data.an_element().value[:when]
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.dt_editor_date_installed_value_value << new_val
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024
	##
	##  Set the date value in the tree_item
	##

	.items[:dt_editor_date_installed_value_value] << new_val

        _self.changed(:dt_editor_date_installed_value_aspect, :refresh)

	.items[:dt_editor_date_installed_value].selection.empty()
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.date_time_item_01_changed(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024
	##
	##  Default code to run when value is changed by code.

        (a_display_tree, what, new_value, old_value, editor) << (_scatter args)

        _self.dt_editor_date_installed_value_value << new_value
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.dd_default_method(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024
	##
	##  General default method writing CLASS.METHOD and passed ARGS to
	##  the Magik> prompt.

	msg << write_string("Auto-generated : ",args[1],%newline)

	_if args.size > 1
	_then
		msg +<< write_string(%newline,args.size-1," parameter(s) passed:")
 	_endif

	_for i _over 2.upto(args.size)
	_loop
		msg +<< write_string(%newline,"         ",args[i])
	_endloop

	write(%newline,"-"*80,%newline,msg)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.tabular_list_01_aspect
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024
	##
	##  SAMPLE tabular list code ...

	tab_list << rope.new()

	# Generate 10 rows of random data
	r26 << random.new(26)
	r4 << random.new(4)
	alpha << "abcdefghijklmnopqrstuvwxyz"

	_for i _over 1.upto(10)
	_loop
		vals << {}.new(10)

		# For each row, generate a random string for each column
		_for c _over 1.upto(10)
		_loop
			str << ""
			_for j _over 1.upto(r4.get()+1)
			_loop
				str +<< alpha[r26.get()+1]
			_endloop

			vals[c] << str
		_endloop

		# Set the row of data for the table
		ds << display_tree.new(i,vals)

		# Specify how the data will be displayed
		ds.styled_string << {:value,1,:tab,:value,2,:tab,:value,3,:tab,:value,4,:tab,:value,5,:tab,:value,6,:tab,:value,7,:tab,:value,8,:tab,:value,9,:tab,:value,10}

		# Add the row to the list
		tab_list.add_last(ds)
	_endloop

	>> tab_list
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.tabular_list_01_double_clicked(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.tabular_list_01_double_clicked()",_scatter args)
_endmethod
$

_pragma(classify_level=advanced, topic={projeto_final})
_method projeto_final.tabular_list_01_selected(_gather args)
	##
	##  Auto-generated by Dialog Designer v2.7 : 18/09/2024

	_self.dd_default_method("projeto_final.tabular_list_01_selected()",_scatter args)
_endmethod
$
